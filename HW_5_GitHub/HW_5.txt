GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON. 
 --- Перейти на github.com -> Нажать справа сверху на иконку своего аккаунта -> Нажать на Your Repositories -> Нажать на New -> Ввести требуемые данные из п.21 -> Нажать на Create repository
 5. Клонировать репозиторий JSON на локальный компьютер. --- Нажать на Code -> Скопировать ссылку -> Ввести в терминал git clone https://github.com/DmitriyZakharenko/JSON.git
 6. Внутри локального JSON создать файл “new.json”. --- cd JSON --- touch new.json
 7. Добавить файл под гит. --- git add new.json
 8. Закоммитить файл. --- git commit -m "create new.json"
 9. Отправить файл на внешний GitHub репозиторий. --- git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. 
 --- vim new.json -> s "пишу текст в формате жсон с необходимыми данными"-> esc -> :wq
 11. Отправить изменения на внешний репозиторий. git add new.json|git commit -m "add info"|git push
 12. Создать файл preferences.json --- touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 --- vim preferences.json -> s "пишу текст в формате жсон с необходимыми данными"-> esc -> :wq
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
 --- touch skills.json -> vim skills.json -> s "пишу текст в формате жсон с необходимыми данными"-> esc -> :wq
 15. Отправить сразу 2 файла на внешний репозиторий. --- git add .|git commit -am "create files"|git push
 16. На веб интерфейсе создать файл bug_report.json. --- add file -> create new file -> ввести в поле имени bug_report.json
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. --- внизу страницы добавить данные о Commit -> нажать Commit new file
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. --- Выбрать файл с названием bug_report.json -> Нажать на "карандаш (Edit this file)"
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. --- Написать в поле Commit "add req", нажать commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON --- git pull


XML
 21. Создать внешний репозиторий c названием XML.
 --- Перейти на github.com -> Нажать справа сверху на иконку своего аккаунта -> Нажать на Your Repositories -> Нажать на New ->  Ввести требуемые данные из п.21->Нажать на Create repository  
 22. Клонировать репозиторий XML на локальный компьютер. --- cd .. --> git clone https://github.com/DmitriyZakharenko/XML.git
 23. Внутри локального XML создать файл “new.xml”. --- cd XML -> touch new.xml
 24. Добавить файл под гит. --- git add new.xml
 25. Закоммитить файл. --- git commit -m "create new.xml"
 26. Отправить файл на внешний GitHub репозиторий. --- git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 --- vim new.xml -> s "пишу текст в формате xml с необходимыми данными"-> esc -> :wq
 28. Отправить изменения на внешний репозиторий. --- git add new.xml|git commit -m "add info"|git push
 29. Создать файл preferences.xml --- touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 --- vim preferences.xml -> s "пишу текст в формате xml с необходимыми данными"-> esc -> :wq
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 --- touxh skill.xml -> vim skill.xml -> s "пишу текст в формате xml с необходимыми данными"-> esc -> :wq
 32. Сделать коммит в одну строку. --- git add .|git commit -am "create files"
 33. Отправить сразу 2 файла на внешний репозиторий. --- git push
 34. На веб интерфейсе создать файл bug_report.xml. --- add file -> create new file -> ввести в поле имени bug_report.xml
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. --- внизу страницы добавить данные о Commit -> нажать Commit new file
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. --- Выбрать файл с названием bug_report.xml -> Нажать на "карандаш (Edit this file)"
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. --- Написать в поле Commit "add req", нажать commit changes
 38. Синхронизировать внешний и локальный репозиторий XML --- git pull
 
 TXT
 1. Создать внешний репозиторий c названием TXT.
 --- Перейти на github.com -> Нажать справа сверху на иконку своего аккаунта -> Нажать на Your Repositories -> Нажать на New ->  Ввести требуемые данные из п.21->Нажать на Create repository  
 2. Клонировать репозиторий TXT на локальный компьютер.--- cd .. --> git clone https://github.com/DmitriyZakharenko/TXT.git
 3. Внутри локального TXT создать файл “new.txt”. --- cd TXT -> touch new.txt
 4. Добавить файл под гит. --- git add new.txt
 5. Закоммитить файл. --- git commit -m "create new.txt"
 6. Отправить файл на внешний GitHub репозиторий. --- git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
 --- vim new.txt -> s "пишу текст в формате txt с необходимыми данными"-> esc -> :wq
 8. Отправить изменения на внешний репозиторий. --- git add new.txt|git commit -m "add info"|git push
 9. Создать файл preferences.txt --- touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
 --- vim preferences.txt -> s "пишу текст в формате txt с необходимыми данными"-> esc -> :wq
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
 --- touch skills.txt -> vim preferences.txt -> s "пишу текст в формате txt с необходимыми данными"-> esc -> :wq
 12. Сделать коммит в одну строку. --- git add .|git commit -am "create files"
 13. Отправить сразу 2 файла на внешний репозиторий. --- git push
 14. На веб интерфейсе создать файл bug_report.txt. --- add file -> create new file -> ввести в поле имени bug_report.txt
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе. --- внизу страницы добавить данные о Commit -> нажать Commit new file
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT. --- Выбрать файл с названием bug_report.txt -> Нажать на "карандаш (Edit this file)"
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. --- Написать в поле Commit "add req", нажать commit changes
 18. Синхронизировать внешний и локальный репозиторий TXT --- git pull

Вариант создания репозитория не через сайт: git init TXT
